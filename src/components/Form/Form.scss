@import "../../styles/main";

// Form variables

$inputHeight: $size-xxxl;

@mixin placeholder {
  // IMPORTANT: Do not combine the following placeholder styles, as otherwise they will break.

  // Chrome/Opera/Safari
  ::-webkit-input-placeholder {
    @content;
  }

  // Firefox 19+
  :-moz-placeholder {
    @content;
  }

  // IE 10+
  ::-moz-placeholder {
    @content;
  }

  // Firefox 18-
  :-ms-input-placeholder {
    @content;
  }
}

@include placeholder {
  color: $greyscale-60;
}

@mixin focus {
  transition: $transition-m;

  &:focus {
    outline: none;
    border-color: $greyscale-00;
  }
}

@include shakeAnimation();

.has-error {
  animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}

.generic-error {
  background: $red-50;
  color: $greyscale-100;
  padding: $size-xxs;
  border-radius: $border-radius-s;
}

.wrapper {
  min-height: $size-xxxl;
  display: flex;
  align-items: center;
  position: relative;
  font-size: 1rem;

  .error {
    position: absolute;
    top: 100%;
    right: 0;
    margin-top: $size-xxs;
    background: $red-50;
    color: $greyscale-100;
    padding: $size-xxxs $size-xxs;
    border-radius: $size-xxxs;
    font-size: $size-xs;
    white-space: pre-wrap;
    max-width: 55%;
    @include z-index("overlay", "ground");

    &:before {
      display: block;
      content: "";
      position: absolute;
      right: $size-m;
      bottom: 100%;
      width: 0;
      height: 0;
      border-left: $size-xxs solid transparent;
      border-right: $size-xxs solid transparent;
      border-bottom: $size-xxs solid $red-50;
    }
  }

  &.inline {
    display: inline-flex;
  }

  & + .wrapper {
    margin-top: $size-xl;
  }

  & + label.wrapper {
    margin-top: $size-xl;
  }

  input[type="text"],
  input[type="password"],
  input[type="email"],
  input[type="phone"],
  input[type="number"],
  textarea {
    border: $border-default;
    background-color: $greyscale-100;
    border-radius: 2px;
    position: relative;
    box-sizing: border-box;
    width: 100%;
    @include focus();
    min-height: $size-xxxl;
  }

  input {
    line-height: $inputHeight;
    padding: 0 $size-s;
  }

  textarea {
    min-height: 8rem;
    resize: none;
    padding: $size-s;
  }

  textarea + .label {
    top: $size-s;
    transform: translateY(0);
  }

  input:focus + .label,
  textarea:focus + .label,
  .slider .label,
  &:not(.inline) .select + .label,
  &.has-value:not(.select-wrapper) .label {
    font-size: 0.85rem;
    top: -$size-xxxs;
    left: 0;
    transform: translateY(-100%);
  }

  input[type="checkbox"],
  input[type="radio"] {
    font: inherit;
    vertical-align: middle;
    background: $greyscale-100;
    border-radius: $size-xxxs / 2;
    box-sizing: border-box;
    border: $border-default;
    position: relative;
    margin-right: $size-m;
  }

  .cb-label {
    user-select: none;
    cursor: pointer;
  }

  .label {
    position: absolute;
    pointer-events: none;
    left: $size-s;
    top: 50%;
    color: $greyscale-60;
    transform: translateY(-50%);
    transition: $transition-s;
  }

  .slider .label,
  &.has-value .slider .label {
    top: -$size-m;
  }

  /**
  * STYLES FOR THE SLIDER
  */
  $slider-height: $size-xxs;

  .slider {
    position: relative;
    display: inline-block;
    width: 100%;
    height: $slider-height;
    background: $greyscale-50;
    border-radius: $size-xxxs / 2;
    border: 0 solid #010101;
    outline: none;
    user-select: none;

    .label-text {
      display: inline-block;
      margin-right: $size-xs;

      &:after {
        content: ":";
      }
    }

    .range-min {
      display: inline-block;
      min-width: 5.5rem;
    }

    .range-min + .range-max {
      margin-left: $size-xs;
    }

    $thumb-size: $size-xl;

    .thumbBg {
      display: inline-block;
      height: $slider-height;
      background: $blue-50;
      position: absolute;
      margin-left: $thumb-size;
    }

    .thumb {
      display: inline-block;
      border: $border-default;
      height: $thumb-size;
      width: $thumb-size;
      border-radius: 50%;
      background: #ffffff;
      outline: none;
      cursor: pointer;
      position: absolute;
      transition: width 0.1s ease-out, height 0.1s ease-out;
      top: 50%;
      transform: translateY(-50%);
      user-select: none;

      &.trans {
        transition: $transition-m;
      }

      &[data-value]:before {
        position: absolute;
        content: attr(data-value);
        left: -50%;
        right: -50%;
      }

      &:hover {
        border: 1px solid $greyscale-80;
      }
    }
  }

  /**
  * STYLES FOR THE SELECT
  */
  .select {
    position: relative;
    outline: none;
    user-select: none;
    width: 100%;

    // Styles for when the placeholder is active
    &.placeholder {
      position: relative;

      .ph {
        color: $greyscale-60;
      }
    }

    .ph {
      display: flex;
      flex-wrap: wrap;
      max-width: 100%;
      position: relative;
      flex: 1;

      .option {
        max-width: 100%;
        flex: 0 0 auto;
      }

      .option:not(:last-child):after {
        content: ", ";
      }

      // Styles for the arrow
      &:after {
        content: "";
        border-color: $greyscale-80 transparent transparent;
        border-style: solid;
        border-width: 0.4rem 0.4rem 0.2rem;
        display: inline-block;
        height: 0;
        width: 0;
        top: 50%;
        transition: all $transition-m;
        right: - $size-xs * 2;
        margin-top: 0.2rem;
        position: absolute;
        transform: translateY(-50%);
      }
    }

    .select-inner {
      max-width: 100%;
      border: $border-default;
      background: $greyscale-100;
      min-height: $size-xxxl;
      line-height: $size-xxxl;
      position: relative;
      text-align: left;
      padding: 0 $size-xs * 3 0 $size-xs;
      cursor: pointer;
      display: flex;
      align-items: center;

      &:focus {
        border-color: $greyscale-00;
        outline: none;
      }

      .options {
        background: $greyscale-100;
        position: absolute;
        margin-top: -2px;
        margin-bottom: 4rem; // When the options hit the bottom of page, this gives a bit of space
        top: 100%;
        right: -1px;
        left: -1px;
        opacity: 0;
        max-height: 0;
        visibility: hidden;
        overflow: auto;
        z-index: 1;
        @include mediumShadow();
        border: $border-default;
        user-select: none;
        @include z-index("overlay", "ground");

        // Keep the style separated for the placeholder option
        .option {
          padding: 0 $size-xs;
          border-bottom: 1px solid $greyscale-95;

          &:hover,
          &.highlighted {
            background-color: $blue-95;
          }

          &.selected {
            font-weight: bold;
          }
        }
      }

      .option {
        display: flex;
        align-items: center;
      }

      // This is the placeholder
      .option.placeholder {
        color: $greyscale-60;

        &.selected {
          font-weight: normal;
        }
      }
    }

    .text {
      @include textTruncate;
    }

    .icon {
      margin-right: $size-xs;
      width: $size-xl;
      height: $size-xl;

      @include ifInternetExplorer {
        width: 2.2rem;
        height: 2.2rem;
      }
    }

    // When the select box is open or is hover make the border black
    &.is-open .options,
    &.is-open .select-inner,
    &:not(.disabled):hover .select-inner {
      border-color: $greyscale-00;
    }

    &.is-open {
      .options {
        max-height: 320px;
        opacity: 1;
        visibility: visible;
      }

      &:not(.inline) {
        border-top-color: $greyscale-80;
      }
    }

    &:not(.disabled):hover .ph:after,
    &.is-open .ph:after {
      border-color: $greyscale-00 transparent transparent;
    }

    &.disabled {
      .select-inner {
        cursor: default;
        background: $greyscale-95;
        color: $greyscale-60;
      }

      .icon {
        opacity: 0.6;
      }
    }
  }

  /**
  * Styles for an inline select
  */
  &.inline.select-wrapper {
    align-items: center;
    line-height: 1;
    font-size: 1rem;

    &.hasLabel {
      flex-direction: row-reverse;
    }

    .select {
      flex: 0 0 auto;
      width: auto;
      max-width: 100%;
    }

    .label {
      flex: 1 1 auto;
      position: static;
      top: auto;
      left: auto;
      transform: translateY(0);
    }

    .select-inner {
      border: 1px solid transparent;
      display: inline-block;
      background-color: transparent;
      height: auto;

      .options .option {
        line-height: $size-xxxl;
        height: $size-xxxl;
      }

      &:not(.disabled):hover {
        border: 1px solid transparent;
      }
    }

    .options {
      left: auto;
      min-width: 250px;
      max-height: 320px;
    }
  }

  .icoClose,
  .icoCheck {
    display: none;
  }

  .select.multiple {
    .ph {

      // Styles for the arrow
      &:after {
        top: $size-xxxl / 2;
        transform: none;
        margin-top: 0;
      }
    }

    &:not(.placeholder) {
      .ph {
        height: 100%;
        line-height: 1rem;
        align-items: center;
        padding-top: $size-s;

        .option {
          background-color: $blue-50;
          color: $greyscale-100;
          border-radius: 3px;
          padding: $size-xxxs $size-xxs;
          margin: 0 $size-s $size-s 0;
          transition: all $transition-m;

          &:hover {
            background-color: $blue-60;
          }

          &:after {
            display: none;
          }
        }

        .icoClose {
          display: block;
          margin: 0 0 0 $size-xxs;
          transition: all $transition-s;

          &:hover {
            color: $blue-20;
          }

          &:before {
            margin: 0;
            font-size: $size-xs;
          }
        }

        .icoCheck {
          display: none;
        }
      }
    }

    .options .option.selected {
      position: relative;

      .icoCheck {
        content: "";
        display: inline-block;
        position: absolute;
        right: $size-xs;
        color: $blue-50;
        margin: 0;
      }
    }
  }
}

.radioLabel {
  pointer-events: none;
  color: $greyscale-60;
  font-size: 0.85rem;
  margin-right: $size-m;
}

.toggleWrapper {
  border: $border-default;
  border-radius: $border-radius-s;

  &.disabled {
    pointer-events: none;

    .toggleOption {
      background-color: transparent;
    }

    .toggleSelected {
      background-color: $greyscale-60;
    }
  }

  .toggleOption {
    display: inline-block;
    padding: $size-m;
    cursor: pointer;
    border-right: $border-default;
    background-color: $greyscale-100;

    &:last-child {
      border-right: none;
    }
  }

  .toggleSelected {
    background: $blue-50;
    color: $greyscale-100;
  }
}
