@import "../styles/main";

@mixin placeholder {
  // IMPORTANT: Do not combine the following placeholder styles, as otherwise they will break.

  // Chrome/Opera/Safari
  ::-webkit-input-placeholder {
    @content
  }

  // Firefox 19+
  :-moz-placeholder {
    @content
  }

  // IE 10+
  ::-moz-placeholder {
    @content
  }

  // Firefox 18-
  :-ms-input-placeholder {
    @content
  }
}

@include placeholder {
  color: $greyscale-60;
}

@mixin focus {
  transition: $transition-m;
  box-shadow: none;

  &:focus {
    outline: none;
    @include mediumShadow();
  }
}

input[type="text"],
input[type="password"],
input[type="email"],
input[type="phone"],
input[type="number"],
textarea {
  border: $border-default;
  background-color: $greyscale-100;
  padding: $size-s;
  border-radius: 2px;
  position: relative;
  box-sizing: border-box;
  width: 100%;
  @include focus();
}

input[type="number"] {
  width: 6rem;
}

textarea {
  min-height: 8rem;
  resize: none;
}

textarea + .label {
  top: $size-s;
  transform: translateY(0);
}

input:focus + .label,
textarea:focus + .label,
.slider .label,
.wrapper:not(.inline) .select + .label,
.has-value:not(.select-wrapper) .label {
  font-size: 0.85rem;
  top: 0;
  left: 0;
  transform: translateY(calc(-100% - 0.25rem));
}

input[type="checkbox"],
input[type="radio"] {
  font: inherit;
  vertical-align: middle;
  background: $greyscale-100;
  border-radius: $size-xxxs / 2;
  box-sizing: border-box;
  border: $border-default;
  position: relative;
  margin-right: $size-m;
}

.wrapper {
  display: flex;
  position: relative;
  font-size: 1rem;

  &.inline {
    display: inline-flex;
  }

  & + .wrapper {
    margin-top: $size-xl;
  }

  & + label.wrapper {
    margin-top: $size-m;
  }
}

.cb-label {
  user-select: none;
  cursor: pointer;
}

.label {
  position: absolute;
  pointer-events: none;
  left: $size-s;
  top: 50%;
  color: $greyscale-60;
  transform: translateY(-50%);
  transition: $transition-s;
}

/**
 * STYLES FOR THE SLIDER
 */
.slider {
  position: relative;
  display: inline-block;
  width: 100%;
  height: $size-xxs;
  background: $blue-50;
  border-radius: $size-xxxs / 2;
  border: 0 solid #010101;
  outline: none;

  .label {
    top: -$size-xxxs;
  }

  .labelText {
    display: inline-block;
    margin-right: $size-xs;

    &:after {
      content: ':'
    }
  }

  .rangeMin {
    display: inline-block;
    min-width: 5.5rem;
  }

  .rangeMax {
    margin-left: $size-xs;
  }

  .thumb {
    user-select: none;
    display: inline-block;
    border: $border-default;
    height: $size-ml;
    width: $size-ml;
    border-radius: 50%;
    background: #ffffff;
    outline: none;
    cursor: pointer;
    position: absolute;
    transition: width 0.1s ease-out, height 0.1s ease-out;
    top: 50%;
    margin-left: -$size-ml / 2;
    transform: translateY(-50%);

    &.trans {
      transition: $transition-m;
    }

    &[name=min] {
      margin-left: -1px;
    }

    &[name=max] {
      margin-right: -1px
    }

    &[data-value]:before {
      position: absolute;
      content: attr(data-value);
      left: -50%;
      right: -50%
    }
  }
}

/**
 * STYLES FOR THE SELECT
 */
.select {
  position: relative;
  outline: none;
  user-select: none;
  width: 100%;

  // Styles for when the placeholder is active
  &.placeholder {
    position: relative;
    color: $greyscale-60;
  }

  .ph {
    display: flex;

    .option {
      padding-right: $size-xs;
      flex: 0 0 auto;
    }

    .option:not(:last-child):after {
      content: ", ";
    }

    // Styles for the arrow
    &:after {
      content: "";
      border-color: $greyscale-80 transparent transparent;
      border-style: solid;
      border-width: 0.4rem 0.4rem 0.2rem;
      display: inline-block;
      height: 0;
      width: 0;
      top: 50%;
      transition: all $transition-m;
      right: $size-xs;
      margin-top: 0.2rem;
      position: absolute;
      transform: translateY(-50%);
    }
  }

  .select-inner {
    border: $border-default;
    background: $greyscale-100;
    height: $size-xxxl;
    line-height: $size-xxxl;
    position: relative;
    text-align: left;
    padding: 0 $size-xs;
    cursor: pointer;

    &:focus {
      border-color: $greyscale-00;
      outline: none;
    }

    .options {
      background: $greyscale-100;
      position: absolute;
      margin-top: -2px;
      margin-bottom: 4rem; // When the options hit the bottom of page, this gives a bit of space
      top: 100%;
      right: -1px;
      left: -1px;
      opacity: 0;
      max-height: 0;
      visibility: hidden;
      overflow: auto;
      z-index: 1;
      @include mediumShadow();
      border: $border-default;
      user-select: none;

      // Keep the style separated for the placeholder option
      .option {
        padding: 0 $size-xs;
        border-bottom: 1px solid $greyscale-95;

        &:hover,
        &.highlighted {
          background-color: $blue-95;
        }

        &.selected {
          font-weight: bold;
        }
      }
    }

    .option {
      display: flex;
      align-items: center;
    }
  }

  .icon {
    margin-right: $size-xs;
    width: $size-xl;
    height: $size-xl;
  }

  // When the select box is open or is hover make the border black
  &.is-open .options,
  &.is-open .select-inner,
  &:not(.disabled):hover .select-inner {
    border-color: $greyscale-00;
  }

  &.is-open {
    .options {
      max-height: 320px;
      opacity: 1;
      visibility: visible;
    }

    &:not(.inline) {
      border-top-color: $greyscale-80;
    }
  }

  &:not(.disabled):hover .ph:after,
  &.is-open .ph:after {
    border-color: $greyscale-00 transparent transparent;
  }

  &.disabled {
    .select-inner {
      cursor: default;
      background: $greyscale-95;
      color: $greyscale-60;
    }

    .icon {
      opacity: 0.6;
    }
  }
}

/**
 * Styles for an inline select
 */
.wrapper.inline.select-wrapper {
  flex-direction: row-reverse;
  align-items: center;

  .select {
    flex: 0 0 auto;
    width: auto;
  }

  .label {
    flex: 1 1 auto;
    position: static;
    top: auto;
    left: auto;
    transform: translateY(0);
  }

  .select-inner {
    border: 1px solid transparent;
    display: inline-block;
    background-color: transparent;
    height: auto;
    line-height: inherit;

    .options .option {
      line-height: $size-xxxl;
      height: $size-xxxl;
    }

    &:not(.disabled):hover .select-inner {
      border: none;
    }
  }

  .ph {
    &:after {
      right: 0;
    }

    .option {
      padding-right: $size-xs;
    }
  }

  .options {
    left: auto;
    margin-top: $size-m;
    min-width: 250px;
    max-height: 320px;
  }
}

.select.multiple {
  &:not(.placeholder) {
    .ph {
      height: 100%;
      line-height: 1rem;
      align-items: center;

      .option {
        background: $greyscale-80;
        border: $border-default;
        border-radius: 3px;
        padding: $size-xxxs $size-m;
        font-size: 0.8rem;

        &:after {
          content: "x";
          margin-left: $size-xxs;
          display: inline-block;
        }
      }
    }
  }

  .options .option.selected {
    position: relative;

    &:after {
      content: "";
      display: inline-block;
      position: absolute;
      right: $size-xs;
      top: 50%;
      transform: translateY(-50%);
      background: $green-50;
      width: $size-xs;
      height: $size-xs;
    }
  }
}